name: Terraform Azure Deploy

on:
  pull_request:
    types:
      - closed

env:
  TF_VAR_azure_sp_key: ${{ secrets.AZURE_SP_SECRET }}
  TF_VAR_storage_account_key: ${{ secrets.TERRAFORM_STATE_STORAGE_ACCOUNT_KEY }}


jobs:  
  is_executed:
    name: 'Workflow execution controller'
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.SHALL_EXECUTE }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Shall execute set
      id: step1
      run: echo "SHALL_EXECUTE=true" >> $GITHUB_OUTPUT
  
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: is_executed
    steps:
    - run: |
        echo The PR was merged

  IaC_Sec_Scan:
    permissions:
      contents: read
      security-events: write
      actions: read
      

    name: 'Checkov IaC Sec Scan'
    #if: ${{ needs.is_executed.outputs.output1 == 'true'}}
    runs-on: ubuntu-latest
    needs: if_merged
    defaults:
      run:
        shell: bash
    
    steps:
      - uses: actions/checkout@v3

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: cli,sarif
          output_file_path: console,results.sarif
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2

        if: success() || failure()
        with:
          sarif_file: results.sarif
    
  terraform-azure-deploy:
    name: 'Terraform Azure Deploy'
    if: ${{ needs.is_executed.outputs.output1 == 'true'}}
    runs-on: ubuntu-latest
    needs: IaC_Sec_Scan
    defaults:
      run:
        shell: bash

    steps:
    - name: Shall execute set
      run: SHALL_EXECUTE=false
      
    - name: Checkout
      uses: actions/checkout@v3
    - name: Terraform
      uses: hashicorp/setup-terraform@v2


    # - name: 'Terraform Format'
    # #  id: fmt
    #   run: terraform -chdir=./src fmt -check -write=true

         
    - name: 'Terraform Init'
      id: init
      run: terraform -chdir=./src init -backend-config="access_key=${{ secrets.TERRAFORM_STATE_STORAGE_ACCOUNT_KEY }}"
 
    - name: 'Terraform Validate'
      id: validate
      run: terraform -chdir=./src validate -no-color
         
    - name: 'Terraform Plan'
      id: plan
      run: terraform -chdir=./src plan -no-color
      continue-on-error: true

 
    - name: Terraform Apply
      id: apply
      run: terraform -chdir=./src apply -auto-approve

  destroy_infrastructure:
    name: 'Terraform Azure Destroy'
    runs-on: ubuntu-latest
    needs: terraform-azure-deploy
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Terraform
      uses: hashicorp/setup-terraform@v2

    - name: 'Terraform Init'
      id: init
      run: terraform -chdir=./src init -backend-config="access_key=${{ secrets.TERRAFORM_STATE_STORAGE_ACCOUNT_KEY }}"

    - name: Terraform Destroy
      id: destroy
      run: terraform -chdir=./src destroy -auto-approve